{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "file-upload",
  "type": "registry:component",
  "title": "File Input",
  "description": "File upload component",
  "registryDependencies": [
    "https://formcn.dev/r/use-file-upload.json"
  ],
  "files": [
    {
      "path": "registry/default/components/file-upload.tsx",
      "content": "\"use client\";\r\n\r\nimport { AlertCircleIcon, XIcon } from \"lucide-react\";\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\r\nimport {\r\n  formatBytes,\r\n  useFileUpload,\r\n} from \"@/form-builder/hooks/use-file-upload\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { MdAttachFile } from \"react-icons/md\";\r\n\r\nconst getFileIcon = (file: { file: File | { type: string; name: string } }) => {\r\n  const fileType = file.file instanceof File ? file.file.type : file.file.type;\r\n  // const fileName = file.file instanceof File ? file.file.name : file.file.name;\r\n  if (fileType.startsWith(\"image/\")) {\r\n    // return preview\r\n    return (\r\n      <div className=\"aspect-square size-10 overflow-hidden rounded-md\">\r\n        <img\r\n          src={URL.createObjectURL(file.file as Blob)}\r\n          className=\"object-fill\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"aspect-square size-10 flex items-center justify-center overflow-hidden rounded-full\">\r\n      <MdAttachFile className=\"size-5 opacity-60\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport function FileUpload({\r\n  maxFiles,\r\n  maxSize,\r\n  placeholder,\r\n  // description,\r\n  required,\r\n  setValue,\r\n  accept,\r\n  name,\r\n  disabled,\r\n}: {\r\n  maxFiles: number;\r\n  maxSize: number;\r\n  placeholder?: string;\r\n  // description?: string;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  setValue: (name: string, value: any) => void;\r\n  accept?: string;\r\n  name: string;\r\n}) {\r\n  const [\r\n    { files, isDragging, errors },\r\n    {\r\n      handleDragEnter,\r\n      handleDragLeave,\r\n      handleDragOver,\r\n      handleDrop,\r\n      openFileDialog,\r\n      removeFile,\r\n      clearFiles,\r\n      getInputProps,\r\n    },\r\n  ] = useFileUpload({\r\n    multiple: maxFiles > 1,\r\n    maxFiles,\r\n    maxSize,\r\n    accept,\r\n    onFilesChange: (files) => {\r\n      setValue(\r\n        name,\r\n        files.map((file) => file.file)\r\n      );\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-2 pb-2\">\r\n      {/* Drop area */}\r\n      <div\r\n        role=\"button\"\r\n        onClick={openFileDialog}\r\n        onDragEnter={handleDragEnter}\r\n        onDragLeave={handleDragLeave}\r\n        onDragOver={handleDragOver}\r\n        onDrop={handleDrop}\r\n        data-dragging={isDragging || undefined}\r\n        className=\"border-input hover:bg-accent/50 data-[dragging=true]:bg-accent/50 has-[input:focus]:border-ring has-[input:focus]:ring-ring/50 flex min-h-32 flex-col items-center justify-center rounded-md border border-dashed p-4 transition-colors has-disabled:pointer-events-none has-disabled:opacity-50 has-[input:focus]:ring-[3px]\"\r\n      >\r\n        <input\r\n          {...getInputProps()}\r\n          className=\"sr-only\"\r\n          aria-label=\"Upload files\"\r\n          required={required}\r\n          disabled={disabled}\r\n        />\r\n\r\n        <div className=\"flex flex-col items-center justify-center text-center\">\r\n          <div\r\n            className=\"bg-background mb-2 flex size-11 shrink-0 items-center justify-center rounded-full border\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <AiOutlineCloudUpload className=\"size-4 opacity-60\" />\r\n          </div>\r\n          {/* <p className=\"mb-1.5 text-sm font-medium\">\r\n            Upload\r\n          </p> */}\r\n          <p className=\"text-foreground font-medium text-sm mb-2\">\r\n            Drag & drop or click to browse\r\n          </p>\r\n          <div className=\"text-muted-foreground/70 flex flex-wrap justify-center gap-1 text-xs\">\r\n            {placeholder}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {errors.length > 0 && (\r\n        <div\r\n          className=\"text-destructive flex items-center gap-1 text-xs\"\r\n          role=\"alert\"\r\n        >\r\n          <AlertCircleIcon className=\"size-3 shrink-0\" />\r\n          <span>{errors[0]}</span>\r\n        </div>\r\n      )}\r\n\r\n      {/* File list */}\r\n      {files.length > 0 && (\r\n        <div className=\"space-y-2\">\r\n          {files.map((file) => (\r\n            <div\r\n              key={file.id}\r\n              className=\"flex items-center justify-between gap-2 rounded-lg bg-muted/50 p-2 pe-3\"\r\n            >\r\n              <div className=\"flex items-center gap-1.5 overflow-hidden\">\r\n                {getFileIcon(file)}\r\n                <div className=\"flex min-w-0 flex-col gap-0.5\">\r\n                  <p className=\"truncate text-[11px] font-medium max-w-[200px]\">\r\n                    {file.file instanceof File\r\n                      ? file.file.name\r\n                      : file.file.name}\r\n                  </p>\r\n                  <p className=\"text-muted-foreground text-xs\">\r\n                    {formatBytes(\r\n                      file.file instanceof File\r\n                        ? file.file.size\r\n                        : file.file.size\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <Button\r\n                size=\"icon\"\r\n                variant=\"ghost\"\r\n                className=\"text-muted-foreground/80 hover:text-foreground -me-2 size-8 hover:bg-transparent\"\r\n                onClick={() => removeFile(file.id)}\r\n                aria-label=\"Remove file\"\r\n              >\r\n                <XIcon className=\"size-4\" aria-hidden=\"true\" />\r\n              </Button>\r\n            </div>\r\n          ))}\r\n\r\n          {/* Remove all files button */}\r\n          {files.length > 1 && (\r\n            <div className=\"flex justify-end\">\r\n              <Button size=\"sm\" variant=\"outline\" onClick={clearFiles}>\r\n                Remove all files\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n",
      "type": "registry:component"
    }
  ]
}