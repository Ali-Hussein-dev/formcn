{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "multi-step-form",
  "type": "registry:component",
  "title": "Multi-step form",
  "description": "Multi-step form",
  "dependencies": [
    "motion"
  ],
  "registryDependencies": [
    "use-multi-step-form",
    "progress",
    "button"
  ],
  "files": [
    {
      "path": "src/components/multi-step-form.tsx",
      "content": "\"use client\";\r\nimport { Button, buttonVariants } from \"@/components/ui/button\";\r\nimport { useMultiStepForm } from \"@/hooks/use-multi-step-form\";\r\nimport { Progress } from \"@/components/ui/progress\";\r\nimport { AnimatePresence, motion } from \"motion/react\";\r\nimport * as React from \"react\";\r\nimport type { VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst NextButton = (\r\n  props: React.ComponentProps<\"button\"> &\r\n    VariantProps<typeof buttonVariants> & {\r\n      asChild?: boolean;\r\n    }\r\n) => {\r\n  const { isLastStep, goToNext } = useMultiStepForm();\r\n  if (isLastStep) return null;\r\n  return (\r\n    <Button size=\"sm\" type=\"button\" onClick={() => goToNext()} {...props} />\r\n  );\r\n};\r\n\r\nconst PreviousButton = (\r\n  props: React.ComponentProps<\"button\"> &\r\n    VariantProps<typeof buttonVariants> & {\r\n      asChild?: boolean;\r\n    }\r\n) => {\r\n  const { isFirstStep, goToPrevious } = useMultiStepForm();\r\n  if (isFirstStep) return null;\r\n  return (\r\n    <Button\r\n      size=\"sm\"\r\n      type=\"button\"\r\n      variant=\"outline\"\r\n      onClick={() => goToPrevious()}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst SubmitButton = (\r\n  props: React.ComponentProps<\"button\"> &\r\n    VariantProps<typeof buttonVariants> & {\r\n      asChild?: boolean;\r\n    }\r\n) => {\r\n  const { isLastStep, goToNext } = useMultiStepForm();\r\n  if (!isLastStep) return null;\r\n  return <Button size=\"sm\" type=\"button\" {...props} />;\r\n};\r\n\r\nconst ResetButton = (\r\n  props: React.ComponentProps<\"button\"> &\r\n    VariantProps<typeof buttonVariants> & {\r\n      asChild?: boolean;\r\n    }\r\n) => {\r\n  return <Button size=\"sm\" type=\"button\" variant=\"ghost\" {...props} />;\r\n};\r\n\r\nconst FormHeader = (props: React.ComponentProps<\"div\">) => {\r\n  const { currentStepIndex, steps } = useMultiStepForm();\r\n  return (\r\n    <div className=\"flex flex-col items-start justify-center gap-1\" {...props}>\r\n      <span>\r\n        Step {currentStepIndex} of {steps.length}\r\n      </span>\r\n      <Progress value={(currentStepIndex / steps.length) * 100} />\r\n    </div>\r\n  );\r\n};\r\nconst FormFooter = (props: React.ComponentProps<\"div\">) => {\r\n  return (\r\n    <div\r\n      className=\"w-full pt-3 flex items-center justify-end gap-3\"\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst StepFields = (props: React.ComponentProps<\"div\">) => {\r\n  const { currentStepIndex, steps } = useMultiStepForm();\r\n  const currentFormStep = steps[currentStepIndex - 1];\r\n  if (\r\n    !currentFormStep ||\r\n    currentStepIndex < 1 ||\r\n    currentStepIndex > steps.length\r\n  ) {\r\n    return null;\r\n  }\r\n  return (\r\n    <AnimatePresence mode=\"popLayout\">\r\n      <motion.div\r\n        key={currentStepIndex}\r\n        initial={{ opacity: 0, x: 15 }}\r\n        animate={{ opacity: 1, x: 0 }}\r\n        exit={{ opacity: 0, x: -15 }}\r\n        transition={{ duration: 0.4, type: \"spring\" }}\r\n        className={cn(\"flex flex-col gap-2\", props.className)}\r\n      >\r\n        {currentFormStep.component}\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nfunction MultiStepFormContent(props: React.ComponentProps<\"div\">) {\r\n  return <div className=\"flex flex-col gap-2 pt-3\" {...props} />;\r\n}\r\n\r\nexport {\r\n  MultiStepFormContent,\r\n  FormHeader,\r\n  FormFooter,\r\n  StepFields,\r\n  // Form Actions\r\n  NextButton,\r\n  PreviousButton,\r\n  SubmitButton,\r\n  ResetButton,\r\n};\r\n",
      "type": "registry:component",
      "target": "components/multi-step-form.tsx"
    }
  ]
}